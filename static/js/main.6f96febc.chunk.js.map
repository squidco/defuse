{"version":3,"sources":["components/BombTimer.js","components/EndScreen.js","components/PlantDefuser.js","pages/Game.js","App.js","index.js"],"names":["BombTimer","time","setGameStage","setWinner","winner","useState","bombTime","setBombTime","timer","useRef","useEffect","current","setInterval","prevState","console","log","clearInterval","EndScreen","children","PlantDefuser","stage","setTime","interval","notPlanting","window","addEventListener","removeEventListener","onMouseDown","Game","roundTime","setRoundTime","defuseTime","setDefuseTime","gameStage","onSubmit","e","preventDefault","className","style","display","htmlFor","name","type","onChange","target","value","App","router","createBrowserRouter","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f96febc.chunk.js","sourcesContent":["//This is the component that is rendered after the renderGame state is changed to true.\n//It either waits for the bomb to time out or for the defuser be planted.\nimport { useEffect, useState, useRef } from \"react\";\n\n\nfunction BombTimer({ time, setGameStage, setWinner, winner }) {\n    const [bombTime, setBombTime] = useState()\n    const timer = useRef()\n    // Use effect to start the bomb\n    useEffect(() => {\n        timer.current = setInterval(() => {\n            setBombTime(prevState => (prevState - 1))\n        }, 1000)\n    }, [])\n\n    useEffect(() => {\n        console.log(time)\n        setBombTime(time)\n    }, [time])\n\n    // Use effect that checks every rerender if the bomb time is zero\n    useEffect(() => {\n        if (bombTime === 0) {\n            clearInterval(timer.current)\n            setWinner(winner)\n            setGameStage(\"winnerWinner\")\n        }\n    }, [bombTime])\n\n    return (\n        <>\n            {bombTime !== 0 &&\n                <h1>{bombTime}</h1>\n            }\n        </>\n    )\n}\n\nexport default BombTimer","function EndScreen({ children }) {\n    return (\n        <div>\n            <p>{children} win!</p>\n        </div>\n    )\n}\n\nexport default EndScreen","import React, { useEffect, useRef, useState } from \"react\";\n\nfunction PlantDefuser({ setGameStage, stage, setWinner, winner }) {\n    const [time, setTime] = useState(7)\n    const interval = useRef()\n\n    //adds mouseup event listener to the entire window so players cant just push the button once and then hover off of it\n    useEffect(() => {\n        window.addEventListener(\"mouseup\", notPlanting)\n    }, [])\n\n    useEffect(() => {\n        if (time === 0) {\n            window.removeEventListener(\"mouseup\", notPlanting)\n            setWinner(winner)\n            setGameStage(stage)\n        }\n    }, [time])\n\n    function planting() {\n        interval.current = setInterval(() => {\n            setTime(prevState => (prevState - 1))\n            console.log(time)\n        }, 1000)\n    }\n\n    function notPlanting() {\n        clearInterval(interval.current)\n        setTime(7)\n    }\n\n    return (\n        <button onMouseDown={planting}>Press and Hold</button>\n    )\n}\n\nexport default PlantDefuser","import React, { useState } from \"react\"\nimport BombTimer from \"../components/BombTimer\"\nimport EndScreen from \"../components/EndScreen\"\nimport PlantDefuser from \"../components/PlantDefuser\"\n\nfunction Game() {\n    const [roundTime, setRoundTime] = useState()\n    const [defuseTime, setDefuseTime] = useState()\n    const [gameStage, setGameStage] = useState(\"settings\")\n    const [winner, setWinner] = useState(\"\")\n\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        if (roundTime && defuseTime) {\n            setGameStage(\"bombPlanted\")\n        }\n    }\n\n    switch (gameStage) {\n        case \"settings\":\n            return (\n                <form onSubmit={handleSubmit}>\n                    <div className=\"input-group\">\n                        <label style={{ display: \"flex\" }} htmlFor=\"roundTime\">Round Time</label>\n                        <input style={{ display: \"block\" }} name=\"roundTime\" type=\"text\" onChange={e => setRoundTime(e.target.value)}></input>\n                    </div>\n                    <div className=\"input-group\">\n                        <label style={{ display: \"flex\" }} htmlFor=\"defuseTime\">Defuse Time</label>\n                        <input style={{ display: \"block\" }} name=\"defuseTime\" type=\"text\" onChange={e => setDefuseTime(e.target.value)}></input>\n                    </div>\n                    <button type=\"submit\">Start Round</button>\n                </form>\n            )\n        case \"bombPlanted\":\n            return (\n                <div>\n                    <BombTimer time={roundTime} setGameStage={setGameStage} setWinner={setWinner} winner={\"Defenders\"} />\n                    <PlantDefuser setGameStage={setGameStage} stage={\"defuserPlanted\"} setWinner={setWinner} winner={\"Attackers\"} />\n                </div>\n            )\n        case \"defuserPlanted\":\n            return (<div>\n                <BombTimer time={defuseTime} setGameStage={setGameStage} setWinner={setWinner} winner={\"Attackers\"} />\n                <PlantDefuser setGameStage={setGameStage} stage={\"winnerWinner\"} setWinner={setWinner} winner={\"Defenders\"} />\n            </div>)\n        case \"winnerWinner\":\n            return <EndScreen>{winner}</EndScreen>\n        default:\n            return <p>You broke it. Good job.</p>\n    }\n\n\n};\n\nexport default Game","import './App.css';\nimport Game from './pages/Game';\n\nfunction App() {\n\n  return (\n    <Game />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n  createBrowserRouter,\n  RouterProvider\n} from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <App />,\n  }\n]);\n\nReactDOM.render(\n  <React.StrictMode>\n    <RouterProvider router={router} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}